@import '../../styles/styles.sass'

.container
  flex: 1 1 100%
  padding: map-get($grid-gutters, 'xl')
  margin: auto
  width: 100%

  .container
    padding: 0

  @each $size, $width in $container-max-widths
    @media only screen and (min-width: $width)
      max-width: ($width * 0.9375) // Credit to bootstrap

  @media #{map-get($display-breakpoints, 'sm-and-down')}
    padding: map-get($grid-gutters, 'lg')

  &.fluid
    max-width: 100%

  &.fill-height
    align-items: center
    display: flex

    > .layout
      height: 100%
      flex: 1 1 auto

  &.grid-list
    @each $size, $gutter in $grid-gutters
      &-#{$size}
        > .layout
          .flex
            padding: ($gutter / 2)

        > .layout:only-child
          margin: -($gutter / 2)

        > .layout:not(:only-child)
          margin: auto -($gutter / 2)

.layout
  display: flex
  flex: 1 1 auto
  flex-wrap: wrap
  // https://github.com/vuetifyjs/vuetify/issues/3873
  min-width: 0

  &.row
    flex-direction: row

    &.reverse
      flex-direction: row-reverse

  &.column
    flex-direction: column

    &.reverse
      flex-direction: column-reverse

    > .flex
      max-width: 100%

  &.no-wrap
    flex-wrap: nowrap

@each $size, $width in $grid-breakpoints
  @media all and (min-width: $width)
    @for $n from 1 through $grid-columns
      .flex.#{$size}#{$n}
        flex-basis: $n / $grid-columns * 100%
        flex-grow: 0
        max-width: $n / $grid-columns * 100%

      .flex.order-#{$size}#{$n}
        order: $n

    @for $n from 0 through $grid-columns
      .flex.offset-#{$size}#{$n}
        // Offsets can only ever work in row layouts
        margin-left: $n / $grid-columns * 100%

.spacer
  flex-grow: 1 !important

.fill-height
  height: 100%
